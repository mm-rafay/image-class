apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-inference
  namespace: image-class
spec:
  replicas: 1  # start with 1; HPA can scale this up
  selector:
    matchLabels:
      app: image-inference
  template:
    metadata:
      labels:
        app: image-inference
    spec:
      imagePullSecrets:
      - name: ecr-creds
      containers:
      - name: inference
        image: 898121064240.dkr.ecr.us-east-1.amazonaws.com/ship-inference:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 80
        env:
          - name: MODEL_PATH
            value: "/mnt/model/ship_model.pth"   # path to the saved model file (from PVC)
          # (if needed, additional env like for classes file path)
        volumeMounts:
          - name: model-vol
            mountPath: /mnt/model    # mount model PVC to same path used in training output
        resources:
          limits:
            cpu: "2"
            memory: "8Gi"
            nvidia.com/gpu: 1        # allocate one GPU for inference pod
          requests:
            cpu: "1"
            memory: "4Gi"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 15
      volumes:
      - name: model-vol
        persistentVolumeClaim:
          claimName: image-model-pvc
      # nodeSelector/tolerations if needed for GPU nodes (similar to training job)
